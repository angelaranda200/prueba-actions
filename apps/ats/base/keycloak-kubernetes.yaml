apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: dev
  labels:
    app: keycloak
spec:
  ports:
  -  port: 8080
  selector:
    app: keycloak
  type: LoadBalancer
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: dev
  labels:
   app: keycloak
   environment: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
      environment: dev
  template:
    metadata:
      labels:
        app: keycloak
        environment: dev
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:21.1.1
          args: ["start-dev" ]
          env:
            - name: KEYCLOAK_ADMIN
              value: "admin"
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: "admin"
            - name: KC_PROXY
              value: "edge"
            - name: KC_LOG_LEVEL
              value: INFO
            - name: DB_VENDOR
              value: "POSTGRES"
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL_HOST
              value: postgres15.dev.svc.cluster.local
            - name: POSTGRES_PORT
              value: "5432"
            - name: KC_DB_URL_DATABASE
              value: "keycloak"
            - name: KC_DB_SCHEMA
              value: public
            - name: KC_DB_USERNAME
              value: "postgres"
            - name:  KC_DB_PASSWORD
              value: "password"
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /realms/master
              port: 8080
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"
      initContainers:
      - name: init-postgres-service
        image: busybox
        command: ['sh', '-c', 'until nslookup postgres15.dev.svc.cluster.local; do echo waiting for postgres15.dev.svc.cluster.local; sleep 2; done;']
      restartPolicy: Always        
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak
  namespace: dev
spec:
  tls:
    - hosts:
      - localhost
  rules:
    - host: localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  number: 8080